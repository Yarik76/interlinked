{"version":3,"file":"static/js/465.c94f86bc.chunk.js","mappings":"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","sources":["webpack://interlinked/./src/Components/Profile/Profile.module.scss?dd72","webpack://interlinked/./src/Components/Profile/ProfileInfo/ProfileInfo.module.scss?c035","Components/Profile/ProfileInfo/ProfileStatus.jsx","webpack://interlinked/./src/Components/Profile/ProfileInfo/ChangeImg/ChangeImg.module.scss?24b8","Components/Profile/ProfileInfo/ChangeImg/ChangeImg.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://interlinked/./src/Components/Profile/MyPosts/MyPosts.module.scss?ba8b","webpack://interlinked/./src/Components/Profile/MyPosts/Post/Post.module.scss?e644","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__6zJFg\"};","// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"ProfileInfo_profileInfo__qsv8I\",\"bgImg\":\"ProfileInfo_bgImg__EuNqs\",\"profileImage\":\"ProfileInfo_profileImage__XTKqH\",\"descr\":\"ProfileInfo_descr__I3k1E\",\"contacts\":\"ProfileInfo_contacts__JBv8O\"};","import React, { useState, useEffect} from \"react\"\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    const [status, setStatus] = useState(props.status)\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    useEffect(() => setStatus(props.status), [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n       setEditMode(false)\r\n       props.updateStatus(status)\r\n    }\r\n\r\n    return (  \r\n     \r\n        <div>\r\n            {!editMode \r\n            ? <div><span onDoubleClick = {activateEditMode}>{props.status || \"---\"}</span></div> //тут старый статус пока на серв идут данные\r\n            : <div>\r\n                <input \r\n                    onChange = {(e) => {setStatus(e.currentTarget.value)}}\r\n                    autoFocus = {true} onBlur = {deactivateEditMode} \r\n                    value={status}\r\n                />\r\n            </div>  \r\n            }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ProfileStatus;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from \"react\"\r\n\r\n// class ProfileStatus extends React.Component {\r\n//     state = {\r\n//         editMode: false,\r\n//         status: this.props.status\r\n//     }\r\n//     componentDidUpdate(prevProps, prevState) {\r\n//         if (prevProps.status !== this.props.status) {\r\n//             this.setState({\r\n//                 status: this.props.status\r\n//             })\r\n//         }\r\n//     }\r\n//     onStatusChange = (e) => {\r\n//         this.setState({\r\n//            status: e.currentTarget.value\r\n//         })\r\n//     }\r\n//     activateEditMode = () => {\r\n//         this.setState({\r\n//             editMode: true\r\n//         })\r\n//     }\r\n//     deactivateEditMode = () => {\r\n//         this.setState({\r\n//             editMode: false\r\n//         })\r\n//         this.props.updateStatus(this.state.status)\r\n//     }\r\n//     render() {\r\n\r\n//         return (\r\n//             <div>\r\n//                 {!this.state.editMode \r\n//                 ? <div><span onDoubleClick = {this.activateEditMode}>{this.props.status || \"---\"}</span></div> //тут старый статус пока на серв идут данные\r\n//                 : <div>\r\n//                     <input \r\n//                     onChange = {this.onStatusChange}\r\n//                     autoFocus = {true} onBlur = {this.deactivateEditMode} \r\n//                     value={this.state.status}\r\n//                     />\r\n//                 </div>\r\n//                 }\r\n                \r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n// export default ProfileStatus\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"changeImgBtn\":\"ChangeImg_changeImgBtn__6Ibe2\"};","import React, { useState } from 'react';\r\nimport s from './ChangeImg.module.scss'\r\n\r\nconst ChangeImg = (props) => {\r\n\r\n    const onPhotoSelected = (e) => {\r\n        props.updatePhoto(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <div className={s.changeImgBtn}>\r\n            <input onChange={onPhotoSelected} type=\"file\" accept=\".png\"/>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ChangeImg;","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport bg from \"../../../images/background.webp\"\r\nimport {AiFillFacebook, AiFillGithub} from \"react-icons/ai\"\r\nimport {SlSocialVkontakte} from \"react-icons/sl\"\r\nimport noImg from \"../../../images/noImg.png\"\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ChangeImg from \"./ChangeImg/ChangeImg\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  return (\r\n    <div className = {classes.profileInfo}>\r\n      <div className={classes.bgImg}>\r\n        <img src= {bg}/>\r\n      </div>\r\n      <div className = {classes.profileImage}>\r\n        {props.profile.photos.large ? <img src = {props.profile.photos.large}/> : <img src = {noImg}/> }\r\n        {!props.userId ? <ChangeImg updatePhoto = {props.updatePhoto}/> : ''}\r\n      </div>\r\n      <div className ={classes.descr}>\r\n        <h1>{props.profile.fullName}</h1>\r\n        <ProfileStatus updateStatus = {props.updateStatus} status = {props.status}/>\r\n        <div className = {classes.aboutMe}>\r\n          About me: {props.profile.aboutMe}\r\n        </div>\r\n          {props.profile.contacts.facebook && props.profile.contacts.vk && props.profile.contacts.github ? \r\n            <ul className = {classes.contacts}>\r\n              <li><NavLink className = {classes.contact} target = \"_blank\" to = {props.profile.contacts.facebook}><AiFillFacebook size={\"1.5rem\"}/></NavLink></li>\r\n              <li><NavLink className = {classes.contact}target = \"_blank\" to = {props.profile.contacts.vk}><SlSocialVkontakte size={\"1.5rem\"}/></NavLink></li>\r\n              <li><NavLink className = {classes.contact}target = \"_blank\" to = {props.profile.contacts.github}><AiFillGithub size={\"1.5rem\"}/></NavLink></li>\r\n            </ul>\r\n            : \"\"\r\n          }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"myPosts\":\"MyPosts_myPosts__PInun\",\"posts\":\"MyPosts_posts__2grYD\",\"postForm\":\"MyPosts_postForm__fxXFn\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__018FT\",\"avaAndText\":\"Post_avaAndText__LkVvV\",\"text\":\"Post_text__IWwMl\",\"like\":\"Post_like__LhxkR\",\"likesCount\":\"Post_likesCount__PEBBG\"};","import React from \"react\";\r\nimport classes from \"./Post.module.scss\";\r\nimport noImg from \"../../../../images/noImg.png\"\r\n\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={classes.post}>\r\n      <div className={classes.avaAndText}>\r\n        {props.profile.photos.large ? <img src = {props.profile.photos.large}/> : <img className = {classes.img} src = {noImg}/> }\r\n        {/* <img className = {classes.img} src = {} /> */}\r\n        <div className ={classes.text}>\r\n          {props.message}\r\n        </div>\r\n      </div>\r\n      <div className ={classes.like}>\r\n        like  \r\n        <span className= {classes.likesCount}>{props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, {memo} from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport classes from \"./MyPosts.module.scss\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n  const {register, handleSubmit, formState: {errors}, reset} = useForm({\r\n    mode: 'onChange'\r\n  })\r\n\r\n  const onSubmit = (data) => {\r\n    props.addPost(data.newPostText)\r\n    reset()\r\n  }\r\n\r\n  const AddPostForm = () => {\r\n    return (\r\n      <form className = {classes.postForm} onSubmit = {handleSubmit(onSubmit)}>\r\n          <textarea {...register('newPostText', {\r\n            required: \"Write smth...\",\r\n            validate: value => value.trim() !== '' ? null : 'No white spaces',\r\n          })}/>\r\n        <div>\r\n          {errors.newPostText && <div className=\"errorMsg\">{errors.newPostText.message}</div>}\r\n          <button>Add post</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n  return (\r\n    <div className={classes.myPosts}>\r\n      <h4>My posts</h4>\r\n      <AddPostForm/>\r\n      <div className={classes.posts}>\r\n        {props.postsData.map(elem => <Post profile = {props.profile} message = {elem.message} key = {elem.id} likesCount = {elem.likesCount}/>)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(MyPosts);\r\n","import React from \"react\";\r\nimport MyPosts from \"./MyPosts\"\r\nimport {addPost} from \"../../../Redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    postsData: state.profilePage.postsData,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport classes from \"./Profile.module.scss\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../Preloader/Preloader\"\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n  if (!props.profile) return <Preloader/>\r\n\r\n  return (\r\n    <div className={classes.profile}>\r\n      <ProfileInfo userId = {props.userId} updatePhoto = {props.updatePhoto} updateStatus = {props.updateStatus} status = {props.status} profile = {props.profile}/>\r\n      <MyPostsContainer profile = {props.profile}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport Profile from \"./Profile\"\r\nimport { connect } from \"react-redux\";\r\nimport {getUserProfile, getStatus, updateStatus, updatePhoto} from \"../../Redux/profile-reducer\"\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"@reduxjs/toolkit\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst ProfileContainer = (props) => {\r\n    \r\n    let { userId } = useParams()\r\n    let navigate = useNavigate()\r\n   \r\n    useEffect(() => {\r\n        if (!userId) { \r\n            userId = props.id\r\n            if(!userId) navigate('/login')\r\n        }\r\n        if (userId) {\r\n            props.getUserProfile(userId)\r\n            props.getStatus(userId)\r\n        }\r\n    }, [userId, props.profileAuthImg])\r\n\r\n    return (\r\n        <Profile {...props} userId = {userId} /> \r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    id: state.auth.id,\r\n    profileAuthImg: state.profilePage.profileAuthImg,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, updatePhoto}),\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\n// export default connect(mapStateToProps, {getUserProfile})(withRouter(AuthRedirectComponent))\r\n\r\n\r\n","import React from \"react\"\r\nimport {Navigate} from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => { \r\n    return {\r\n      isAuth: state.auth.isAuth,\r\n    }\r\n  }\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    let RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Navigate to={'/login'}/>\r\n        return <Component {...props}/>\r\n    }\r\n    \r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}"],"names":["props","_useState","useState","status","_useState2","_slicedToArray","setStatus","_useState3","_useState4","editMode","setEditMode","useEffect","_jsx","children","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","className","s","updatePhoto","target","files","type","accept","_jsxs","classes","src","bg","profile","photos","large","noImg","userId","ChangeImg","fullName","ProfileStatus","aboutMe","contacts","facebook","vk","github","NavLink","to","AiFillFacebook","size","SlSocialVkontakte","AiFillGithub","message","likesCount","MyPosts","_useForm","useForm","mode","register","handleSubmit","errors","formState","reset","onSubmit","data","addPost","newPostText","AddPostForm","_objectSpread","required","validate","trim","postsData","map","elem","Post","id","memo","connect","state","profilePage","ProfileInfo","MyPostsContainer","Preloader","compose","auth","profileAuthImg","getUserProfile","getStatus","withAuthRedirect","useParams","navigate","useNavigate","Profile","mapStateToPropsForRedirect","isAuth","Component","Navigate"],"sourceRoot":""}