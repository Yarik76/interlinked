{"version":3,"file":"static/js/610.af99c8c9.chunk.js","mappings":"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","sources":["webpack://interlinked/./src/Components/Users/Users.module.scss?5c93","webpack://interlinked/./src/Components/Users/Paginator/Paginator.module.scss?ecc3","Components/Users/Paginator/Paginator.jsx","webpack://interlinked/./src/Components/Users/User/User.module.scss?9c44","Components/Users/User/User.jsx","Components/Users/Users.jsx","Redux/users-selectors.js","Components/Users/UsersContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"users\":\"Users_users__jKg7G\",\"userHl\":\"Users_userHl__2PAhI\",\"userHlText\":\"Users_userHlText__4qD8k\"};","// extracted by mini-css-extract-plugin\nexport default {\"pageNums\":\"Paginator_pageNums__B+Cuy\",\"pageNumSelected\":\"Paginator_pageNumSelected__ieLd6\"};","import React, { useState } from 'react';\r\nimport classes from \"./Paginator.module.scss\"\r\n\r\nconst Paginator = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = [];\r\n   \r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let slicedPages;\r\n    let curPage = props.currentPage\r\n    if (curPage - 5 < 0) slicedPages = pages.slice(0,7)\r\n    else slicedPages = pages.slice(curPage-4, curPage + 3)\r\n    \r\n    return ( \r\n        <div className = {classes.pageNums}>\r\n           \r\n            {slicedPages.map(page => \r\n                <span key = {page} onClick = {() => {props.onPageChanged(page)}} \r\n                      className = {page === props.currentPage ? classes.pageNumSelected : \"\"}> \r\n                      {page}\r\n                </span>\r\n            )}\r\n          \r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Paginator;","// extracted by mini-css-extract-plugin\nexport default {\"user\":\"User_user__XS6mH\",\"userImgBlock\":\"User_userImgBlock__HJ76M\",\"userStatus\":\"User_userStatus__6EItb\",\"followingBtn\":\"User_followingBtn__lqwKT\"};","import React from 'react'\r\nimport noImg from \"../../../images/noImg.png\"\r\nimport classes from \"./User.module.scss\"\r\nimport {IoIosCloseCircleOutline} from \"react-icons/io\"\r\nimport {IoIosAddCircleOutline} from \"react-icons/io\"\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nlet User = ({u, follow, unfollow, followingInProgress}) => {\r\n\r\n    return (\r\n        <li className = {classes.user}>\r\n            <div className= {classes.userImgBlock}>\r\n                {u.followed\r\n                    ? <button className = {classes.followingBtn} disabled = {followingInProgress.some(id => id === u.id)} \r\n                        onClick = {() => { unfollow(u.id)}}>\r\n                        <IoIosCloseCircleOutline size = {\"2em\"}/>\r\n                    </button>\r\n                    : <button className = {classes.followingBtn} disabled = {followingInProgress.some(id => id === u.id)} \r\n                        onClick = {()=> {follow(u.id)}}>\r\n                        <IoIosAddCircleOutline  size = {\"2em\"}/>\r\n                    </button>\r\n                }\r\n                <NavLink to={'/profile/' + u.id}>\r\n                    <img src = {u.photos.small ? u.photos.small : noImg} />\r\n                </NavLink>\r\n                <div>{u.name}</div>\r\n            </div>\r\n            <div className = {classes.userStatus}>\r\n                {u.status ? u.status : \"no status yet\"}\r\n            </div>\r\n            {/* <div className = {classes.userCountry}>\r\n                <div>{'u.location.country'}</div>\r\n                <div>{'u.location.city'}</div>\r\n            </div> */}\r\n        </li>\r\n    )\r\n   \r\n}\r\n\r\nexport default User;","import React from 'react'\r\nimport classes from \"./Users.module.scss\"\r\nimport Paginator from './Paginator/Paginator'\r\nimport User from './User/User'\r\n\r\nlet Users = (props) => {\r\n\r\n    return (\r\n        <div className= {classes.users}>\r\n            <div className={classes.userHl}>\r\n                <div className={classes.userHlText}>Users</div>\r\n                <Paginator totalUsersCount = {props.totalUsersCount} pageSize = {props.pageSize} \r\n                    currentPage = {props.currentPage} onPageChanged = {props.onPageChanged}\r\n                />\r\n            </div>\r\n            {   \r\n                props.users.map(u =>     //u это один юзер из всего массива юзеров\r\n                    <User key = {u.id} u = {u} follow = {props.follow} \r\n                        unfollow = {props.unfollow} \r\n                        followingInProgress = {props.followingInProgress}/>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n   \r\n}\r\n\r\nexport default Users;","import { createSelector } from \"@reduxjs/toolkit\"\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsersReselector = createSelector(getUsersSelector, users => users.filter(u => true))\r\n\r\nexport const getPageSizeSelector = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCountSelector = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPageSelector = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetchingSelector = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgressSelector = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport Users from \"./Users\"\r\nimport { follow, unfollow, getUsers} from \"../../Redux/users-reducer\"\r\nimport {getUsersReselector, getPageSizeSelector,  getTotalUsersCountSelector, getCurrentPageSelector, getIsFetchingSelector, getFollowingInProgressSelector} from \"../../Redux/users-selectors\"\r\nimport Preloader from \"../Preloader/Preloader\"\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\"\r\nimport { compose } from \"@reduxjs/toolkit\"\r\n\r\n\r\nconst UsersContainer = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.getUsers(props.currentPage, props.pageSize, props.term)\r\n    }, [])\r\n    \r\n    const onPageChanged = (pageNum) => { \r\n        props.getUsers(pageNum, props.pageSize, props.term)\r\n    }\r\n\r\n    return (\r\n        props.isFetching ? <Preloader/> \r\n            : \r\n            <Users {...props}\r\n                onPageChanged = {onPageChanged}\r\n            />\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: getUsersReselector(state),\r\n    pageSize: getPageSizeSelector(state),\r\n    totalUsersCount: getTotalUsersCountSelector(state),\r\n    currentPage: getCurrentPageSelector(state),\r\n    isFetching: getIsFetchingSelector(state),\r\n    followingInProgress: getFollowingInProgressSelector(state),\r\n    term: state.usersPage.term,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, getUsers}),\r\n    withAuthRedirect,\r\n)(UsersContainer)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\"\r\nimport {Navigate} from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => { \r\n    return {\r\n      isAuth: state.auth.isAuth,\r\n    }\r\n  }\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    let RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Navigate to={'/login'}/>\r\n        return <Component {...props}/>\r\n    }\r\n    \r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}"],"names":["props","slicedPages","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","curPage","currentPage","slice","_jsx","className","classes","children","map","page","onClick","onPageChanged","_ref","u","follow","unfollow","followingInProgress","_jsxs","followed","disabled","some","id","IoIosCloseCircleOutline","size","IoIosAddCircleOutline","NavLink","to","src","photos","small","noImg","name","status","Paginator","users","User","getUsersReselector","createSelector","state","usersPage","filter","getPageSizeSelector","getTotalUsersCountSelector","getCurrentPageSelector","getIsFetchingSelector","isFetching","getFollowingInProgressSelector","compose","connect","term","getUsers","withAuthRedirect","useEffect","Preloader","Users","_objectSpread","pageNum","mapStateToPropsForRedirect","isAuth","auth","Component","Navigate"],"sourceRoot":""}