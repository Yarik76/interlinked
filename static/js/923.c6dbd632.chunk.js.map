{"version":3,"file":"static/js/923.c6dbd632.chunk.js","mappings":"sMACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAgH,+BCAhH,EAA0B,6B,SCQ1B,EANoB,SAAHA,GAAQA,EAAFC,GAAgB,IAAZC,EAAIF,EAAJE,KACzB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,SAAEJ,GAEtC,ECNA,EAA0B,4BAA1B,EAA4D,wBAA5D,EAA6F,2B,mECGvFK,EAAY,SAAHP,GAAa,OAAAA,EAARQ,SAAyBH,EAAiBA,CAAgB,EAW9E,EATmB,SAAHI,GAAsB,IAAhBC,EAAID,EAAJC,KAAMT,EAAEQ,EAAFR,GAC1B,OACIU,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,GAAI,YAAcZ,EAAIG,UAAWG,EAAUD,SAAA,EAClDH,EAAAA,EAAAA,KAAA,OAAKC,UAAaC,EAAaS,IAAKC,IACnCL,IAGT,E,UCkCA,EAzCgB,SAACM,GAEf,IAAAC,GAA6DC,EAAAA,EAAAA,IAAQ,CACnEC,KAAM,aADDC,EAAQH,EAARG,SAAUC,EAAYJ,EAAZI,aAA0BC,EAAML,EAAlBM,UAAYD,OAASE,EAAKP,EAALO,MAI9CC,EAAW,SAACC,GAChBV,EAAMW,WAAWD,EAAKE,gBACtBJ,GACF,EAEMK,EAAiB,WACrB,OACElB,EAAAA,EAAAA,MAAA,QAAMc,SAAYJ,EAAaI,GAAUnB,SAAA,EACvCH,EAAAA,EAAAA,KAAA,YAAA2B,EAAAA,EAAAA,GAAA,GAAcV,EAAS,iBAAkB,CACtCW,SAAU,gBACVC,SAAU,SAAAC,GAAK,MAAqB,KAAjBA,EAAMC,OAAgB,KAAO,iBAAiB,MAEnEZ,EAAOM,iBAAkBzB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUE,SAAEgB,EAAOM,eAAeO,WAC3EhC,EAAAA,EAAAA,KAAA,OAAAG,UAAKH,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,qBAGnB,EAEA,OACEK,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAqBC,SAClCU,EAAMoB,YAAYC,YAAYC,KAAI,SAACC,GAAI,OACtCpC,EAAAA,EAAAA,KAACqC,EAAU,CAAC9B,KAAM6B,EAAK7B,KAAsBT,GAAIsC,EAAKtC,IAAlBsC,EAAKtC,GAAmB,OAGhEU,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAsBC,SAAA,CACnCU,EAAMoB,YAAYK,aAAaH,KAAI,SAACC,GAAI,OACvCpC,EAAAA,EAAAA,KAACuC,EAAW,CAAiBxC,KAAMqC,EAAKJ,SAApBI,EAAKtC,GAA0B,KAErDE,EAAAA,EAAAA,KAAC0B,EAAc,SAIvB,E,UC/BA,GAAec,E,QAAAA,KACbC,EAAAA,EAAAA,KARoB,SAACC,GACrB,MAAO,CACLT,YAAaS,EAAMT,YACnBU,OAAQD,EAAME,KAAKD,OAEvB,GAG2B,CAACnB,WAAAA,EAAAA,IAC1BqB,EAAAA,EAFF,CAGEC,E,4GCbEC,EAA6B,SAACL,GAC9B,MAAO,CACLC,OAAQD,EAAME,KAAKD,OAEvB,EAEWE,EAAmB,SAACG,GAO7B,OAAOP,EAAAA,EAAAA,IAAQM,EAARN,EALiB,SAAC5B,GACrB,OAAKA,EAAM8B,QACJ3C,EAAAA,EAAAA,KAACgD,GAASrB,EAAAA,EAAAA,GAAA,GAAKd,KADIb,EAAAA,EAAAA,KAACiD,EAAAA,GAAQ,CAACvC,GAAI,UAE5C,GAGJ,C","sources":["webpack://interlinked/./src/Components/Dialogs/Dialogs.module.scss?d5e3","webpack://interlinked/./src/Components/Dialogs/MessageItem/MessageItem.module.scss?b09e","Components/Dialogs/MessageItem/MessageItem.jsx","webpack://interlinked/./src/Components/Dialogs/DialogItem/DialogItem.module.scss?0892","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__87tYN\",\"dialogsItems\":\"Dialogs_dialogsItems__ipQon\",\"messagesItems\":\"Dialogs_messagesItems__-lHpI\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"MessageItem_message__aEnoo\"};","import React from \"react\";\r\nimport classes from \"./MessageItem.module.scss\";\r\n\r\nconst MessageItem = ({ id, text }) => {\r\n  return (\r\n    <div className={classes.message}>{text}</div>\r\n  );\r\n};\r\n\r\nexport default MessageItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"default\":\"DialogItem_default__ZSa9s\",\"img\":\"DialogItem_img__6hgZI\",\"active\":\"DialogItem_active__Ya-Zk\"};","import React from \"react\";\r\nimport classes from \"./DialogItem.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport dialogImg from \"../../../images/dialogImg.webp\"\r\nconst setActive = ({isActive}) => isActive ? classes.active : classes.default; \r\n\r\nconst DialogItem = ({ name, id }) => {\r\n  return (\r\n      <NavLink to={\"/dialogs/\" + id} className={setActive}>\r\n        <img className = {classes.img} src={dialogImg}/>\r\n        {name}\r\n      </NavLink>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport classes from \"./Dialogs.module.scss\";\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {useForm} from \"react-hook-form\"\r\n\r\nconst Dialogs = (props) => {\r\n \r\n  const {register, handleSubmit, formState: {errors}, reset} = useForm({\r\n    mode: 'onChange'\r\n  })\r\n\r\n  const onSubmit = (data) => {\r\n    props.addMessage(data.newMessageText)\r\n    reset()\r\n  }\r\n\r\n  const AddMessageForm = () => {\r\n    return (\r\n      <form onSubmit = {handleSubmit(onSubmit)}>\r\n        <textarea {...register('newMessageText', {\r\n           required: \"Write smth...\",\r\n           validate: value => value.trim() !== '' ? null : 'No white spaces',\r\n        })}/>\r\n        {errors.newMessageText && <div className=\"errorMsg\">{errors.newMessageText.message}</div>}\r\n        <div><button>Send message</button></div>\r\n      </form>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogsItems}>\r\n        {props.dialogsPage.dialogsData.map((elem) => (\r\n          <DialogItem name={elem.name} key = {elem.id} id={elem.id} />\r\n        ))}\r\n      </div>\r\n      <div className={classes.messagesItems}>\r\n        {props.dialogsPage.messagesData.map((elem) => (\r\n          <MessageItem key = {elem.id} text={elem.message} />\r\n        ))}\r\n        <AddMessageForm/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n\r\n\r\n  \r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addMessage } from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"@reduxjs/toolkit\";\r\n\r\nlet mapStateToProps = (state) => { //state прямиком из стора\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n}\r\n  \r\nexport default compose(\r\n  connect(mapStateToProps, {addMessage}),\r\n  withAuthRedirect\r\n)(Dialogs)\r\n\r\n","import React from \"react\"\r\nimport {Navigate} from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => { \r\n    return {\r\n      isAuth: state.auth.isAuth,\r\n    }\r\n  }\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    let RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Navigate to={'/login'}/>\r\n        return <Component {...props}/>\r\n    }\r\n    \r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}"],"names":["_ref","id","text","_jsx","className","classes","children","setActive","isActive","_ref2","name","_jsxs","NavLink","to","src","dialogImg","props","_useForm","useForm","mode","register","handleSubmit","errors","formState","reset","onSubmit","data","addMessage","newMessageText","AddMessageForm","_objectSpread","required","validate","value","trim","message","dialogsPage","dialogsData","map","elem","DialogItem","messagesData","MessageItem","compose","connect","state","isAuth","auth","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","Component","Navigate"],"sourceRoot":""}