{"version":3,"file":"static/js/786.c3e25224.chunk.js","mappings":"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","sources":["webpack://interlinked/./src/Components/Profile/Profile.module.scss?dd72","webpack://interlinked/./src/Components/Profile/ProfileInfo/ProfileInfo.module.scss?c035","webpack://interlinked/./src/Components/Profile/ProfileInfo/ChangeImg/ChangeImg.module.scss?24b8","Components/Profile/ProfileInfo/ChangeImg/ChangeImg.jsx","Components/Profile/ProfileInfo/ProfileData/ProfileData.module.scss","webpack://interlinked/./src/Components/Profile/ProfileInfo/ProfileData/Socials/Socials.module.scss?6b04","Components/Profile/ProfileInfo/ProfileData/Socials/Socials.jsx","Components/Profile/ProfileInfo/ProfileData/ProfileStatus/ProfileStatus.jsx","Components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","webpack://interlinked/./src/Components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.module.scss?b3b1","Components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://interlinked/./src/Components/Profile/MyPosts/MyPosts.module.scss?ba8b","webpack://interlinked/./src/Components/Profile/MyPosts/Post/Post.module.scss?e644","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__6zJFg\"};","// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"ProfileInfo_profileInfo__qsv8I\",\"bgImg\":\"ProfileInfo_bgImg__EuNqs\",\"profileImage\":\"ProfileInfo_profileImage__XTKqH\",\"descr\":\"ProfileInfo_descr__I3k1E\"};","// extracted by mini-css-extract-plugin\nexport default {\"changeImgBtn\":\"ChangeImg_changeImgBtn__6Ibe2\"};","import React from 'react';\r\nimport s from './ChangeImg.module.scss'\r\n\r\nconst ChangeImg = (props) => {\r\n\r\n    const onPhotoSelected = (e) => {\r\n        props.updatePhoto(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <div className={s.changeImgBtn}>\r\n            <input onChange={onPhotoSelected} type=\"file\" accept=\".png\"/>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ChangeImg;","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"contactsWrap\":\"Socials_contactsWrap__BkIYA\",\"contacts\":\"Socials_contacts__kA5td\"};","import React, { Component } from 'react';\r\nimport { useState } from 'react';\r\nimport classes from './Socials.module.scss'\r\nconst Contact = ({title, value}) => {\r\n    return <div className = {classes.contact}>{title}: {value}</div>\r\n}\r\n\r\nconst Socials = (props) => {\r\n    const [isOpened, setIsOpened] = useState(false)\r\n\r\n    return (\r\n        <div className = {classes.contactsWrap}>\r\n            <div className = 'toggleSocialsBtn' onClick = {() => setIsOpened(!isOpened)}>Socials</div>\r\n            <div className={classes.contacts}>\r\n                {isOpened \r\n                ? Object.keys(props.profile.contacts).map(c => <Contact key = {c} title = {c} value = {props.profile.contacts[c]}/>)\r\n                : ''\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Socials;","import React, { useState, useEffect} from \"react\"\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    const [status, setStatus] = useState(props.status)\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    useEffect(() => setStatus(props.status), [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n       setEditMode(false)\r\n       props.updateStatus(status)\r\n    }\r\n\r\n    return (  \r\n     \r\n        <div>\r\n            {!editMode \r\n            ? <div><span onDoubleClick = {activateEditMode}>{props.status || \"---\"}</span></div> //тут старый статус пока на серв идут данные\r\n            : <div>\r\n                <input \r\n                    onChange = {(e) => {setStatus(e.currentTarget.value)}}\r\n                    autoFocus = {true} onBlur = {deactivateEditMode} \r\n                    value={status}\r\n                />\r\n            </div>  \r\n            }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ProfileStatus;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from \"react\"\r\n\r\n// class ProfileStatus extends React.Component {\r\n//     state = {\r\n//         editMode: false,\r\n//         status: this.props.status\r\n//     }\r\n//     componentDidUpdate(prevProps, prevState) {\r\n//         if (prevProps.status !== this.props.status) {\r\n//             this.setState({\r\n//                 status: this.props.status\r\n//             })\r\n//         }\r\n//     }\r\n//     onStatusChange = (e) => {\r\n//         this.setState({\r\n//            status: e.currentTarget.value\r\n//         })\r\n//     }\r\n//     activateEditMode = () => {\r\n//         this.setState({\r\n//             editMode: true\r\n//         })\r\n//     }\r\n//     deactivateEditMode = () => {\r\n//         this.setState({\r\n//             editMode: false\r\n//         })\r\n//         this.props.updateStatus(this.state.status)\r\n//     }\r\n//     render() {\r\n\r\n//         return (\r\n//             <div>\r\n//                 {!this.state.editMode \r\n//                 ? <div><span onDoubleClick = {this.activateEditMode}>{this.props.status || \"---\"}</span></div> //тут старый статус пока на серв идут данные\r\n//                 : <div>\r\n//                     <input \r\n//                     onChange = {this.onStatusChange}\r\n//                     autoFocus = {true} onBlur = {this.deactivateEditMode} \r\n//                     value={this.state.status}\r\n//                     />\r\n//                 </div>\r\n//                 }\r\n                \r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n// export default ProfileStatus\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect} from 'react';\r\nimport s from './ProfileData.module.scss'\r\nimport Socials from './Socials/Socials'\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus'\r\n\r\nconst ProfileData = (props) => {\r\n\r\n    useEffect(() => {\r\n      if (props.userId) props.setInEdit(false) \r\n    }, [props.userId])\r\n\r\n    return (\r\n      <>\r\n        {!props.userId \r\n          ? <button className = 'btnProfileEdit' onClick = {() => props.setInEdit(true)}>Edit profile</button>\r\n          : ''\r\n        }\r\n        <h1>{props.profile.fullName}</h1>\r\n        <ProfileStatus updateStatus = {props.updateStatus} status = {props.status}/>\r\n        <div className = {s.aboutMe}>\r\n          <div>About me: {props.profile.aboutMe}</div> \r\n          <div>Looking for a job description: {props.profile.lookingForAJobDescription}</div>\r\n        </div>\r\n        <Socials profile = {props.profile}/>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default ProfileData","// extracted by mini-css-extract-plugin\nexport default {\"profileDataForm\":\"ProfileDataForm_profileDataForm__A1zc0\"};","import React from 'react';\r\nimport classes from './ProfileDataForm.module.scss'\r\nimport {useForm} from 'react-hook-form'\r\nimport { profileAPI } from '../../../../api/api';\r\n\r\nconst ProfileDataForm = (props) => {\r\n\r\n    const {register, handleSubmit, setError, formState: {errors, isValid}} = useForm({\r\n      mode: \"all\",\r\n      defaultValues: {\r\n        fullName: props.profile.fullName,\r\n        aboutMe: props.profile.aboutMe,\r\n        lookingForAJobDescription: props.profile.lookingForAJobDescription,\r\n        contacts: {\r\n          facebook: props.profile.contacts.facebook,\r\n          website: props.profile.contacts.website,\r\n          vk: props.profile.contacts.vk,\r\n          twitter: props.profile.contacts.twitter,\r\n          instagram: props.profile.contacts.instagram,\r\n          youtube: props.profile.contacts.youtube,\r\n          github: props.profile.contacts.github,\r\n          mainLink: props.profile.contacts.mainLink,\r\n        },\r\n      }\r\n    })\r\n  \r\n    const onSubmit = (data) => {\r\n      props.saveProfile(data, props.profile.userId, setError)\r\n        .then(() => props.setInEdit(false))\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n    \r\n      <div className= {classes.profileDataForm}>\r\n        <form onSubmit = {handleSubmit(onSubmit)}>\r\n          <button type = 'submit' className = 'btnProfileEdit' disabled = {!isValid}>Save changes</button>\r\n          <input className = 'logInput' placeholder='About me' type = 'text' \r\n            {...register('aboutMe', {\r\n              required: 'About me is required',\r\n              validate: value => value.trim() !== '' ? null : 'No white spaces',\r\n            })}\r\n          />\r\n          {errors.aboutMe && <div className=\"errorMsg\">{errors.aboutMe.message}</div>}\r\n          <input className = 'logInput' placeholder='Looking for a job description' type = 'text' \r\n            {...register('lookingForAJobDescription', {\r\n              required: 'Looking for a job description is required',\r\n              validate: value => value.trim() !== '' ? null : 'No white spaces',\r\n            })}\r\n          />\r\n          {errors.lookingForAJobDescription && <div className=\"errorMsg\">{errors.lookingForAJobDescription.message}</div>}\r\n          <div style = {{'margin':'10px 0 0 5px'}}>Socials (optional):</div>\r\n          {Object.keys(props.profile.contacts).map(c => \r\n            <div key = {c}>\r\n              <input className = 'logInput' placeholder={c[0].toUpperCase() + c.slice(1)} type = 'text' \r\n                {...register(`contacts.${c}`)}\r\n                \r\n              />\r\n              {errors.contacts?.[c] && <div className=\"errorMsg\">{errors.contacts[c].message}</div>} \r\n              {/* обращемся к с через [] т.к мы берем значение с в качестве свойства объекта */}\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ProfileDataForm","import React, {useState, useEffect} from \"react\";\r\nimport classes from \"./ProfileInfo.module.scss\";\r\nimport bg from \"../../../images/background.webp\"\r\nimport noImg from \"../../../images/noImg.png\"\r\nimport ChangeImg from './ChangeImg/ChangeImg'\r\nimport ProfileData from \"./ProfileData/ProfileData\";\r\nimport ProfileDataForm from './ProfileDataForm/ProfileDataForm'\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  const [inEdit, setInEdit] = useState(false)\r\n \r\n  \r\n  return (\r\n    <div className = {classes.profileInfo}>\r\n      <div className={classes.bgImg}>\r\n        <img src= {bg}/>\r\n      </div>\r\n      <div className = {classes.profileImage}>\r\n        {props.profile.photos.large ? <img src = {props.profile.photos.large}/> : <img src = {noImg}/> }\r\n        {!props.userId ? <ChangeImg updatePhoto = {props.updatePhoto}/> : ''}\r\n      </div>\r\n      <div className ={classes.descr}>\r\n        {props.userId === undefined && inEdit\r\n          ? <ProfileDataForm profile = {props.profile} setInEdit = {setInEdit} saveProfile = {props.saveProfile}/>\r\n          : <ProfileData userId = {props.userId} setInEdit = {setInEdit} {...props}/>\r\n        }\r\n      </div>\r\n      \r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"myPosts\":\"MyPosts_myPosts__PInun\",\"posts\":\"MyPosts_posts__2grYD\",\"postForm\":\"MyPosts_postForm__fxXFn\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__018FT\",\"avaAndText\":\"Post_avaAndText__LkVvV\",\"text\":\"Post_text__IWwMl\",\"like\":\"Post_like__LhxkR\",\"likesCount\":\"Post_likesCount__PEBBG\"};","import React from \"react\";\r\nimport classes from \"./Post.module.scss\";\r\nimport noImg from \"../../../../images/noImg.png\"\r\n\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={classes.post}>\r\n      <div className={classes.avaAndText}>\r\n        {props.profile.photos.large ? <img src = {props.profile.photos.large}/> : <img className = {classes.img} src = {noImg}/> }\r\n        {/* <img className = {classes.img} src = {} /> */}\r\n        <div className ={classes.text}>\r\n          {props.message}\r\n        </div>\r\n      </div>\r\n      <div className ={classes.like}>\r\n        like  \r\n        <span className= {classes.likesCount}>{props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, {memo} from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport classes from \"./MyPosts.module.scss\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n  const {register, handleSubmit, formState: {errors}, reset} = useForm({\r\n    mode: 'onChange'\r\n  })\r\n\r\n  const onSubmit = (data) => {\r\n    props.addPost(data.newPostText)\r\n    reset()\r\n  }\r\n\r\n  const AddPostForm = () => {\r\n    return (\r\n      <form className = {classes.postForm} onSubmit = {handleSubmit(onSubmit)}>\r\n          <textarea {...register('newPostText', {\r\n            required: \"Write smth...\",\r\n            validate: value => value.trim() !== '' ? null : 'No white spaces',\r\n          })}/>\r\n        <div>\r\n          {errors.newPostText && <div className=\"errorMsg\">{errors.newPostText.message}</div>}\r\n          <button>Add post</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n  return (\r\n    <div className={classes.myPosts}>\r\n      <h4>My posts</h4>\r\n      <AddPostForm/>\r\n      <div className={classes.posts}>\r\n        {props.postsData.map(elem => <Post profile = {props.profile} message = {elem.message} key = {elem.id} likesCount = {elem.likesCount}/>)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(MyPosts);\r\n","import React from \"react\";\r\nimport MyPosts from \"./MyPosts\"\r\nimport {addPost} from \"../../../Redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    postsData: state.profilePage.postsData,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport classes from \"./Profile.module.scss\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../Preloader/Preloader\"\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n  if (!props.profile) return <Preloader/>\r\n\r\n  return (\r\n    <div className={classes.profile}>\r\n      <ProfileInfo \r\n        saveProfile = {props.saveProfile}\r\n        userId = {props.userId} updatePhoto = {props.updatePhoto} \r\n        updateStatus = {props.updateStatus} profileAuthImg = {props.profileAuthImg}\r\n        status = {props.status} profile = {props.profile}/>\r\n      <MyPostsContainer profile = {props.profile}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport Profile from \"./Profile\"\r\nimport { connect } from \"react-redux\";\r\nimport {getUserProfile, getStatus, updateStatus, updatePhoto, saveProfile} from \"../../Redux/profile-reducer\"\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"@reduxjs/toolkit\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst ProfileContainer = (props) => {\r\n    \r\n    let { userId } = useParams()\r\n    let navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if (!userId) { \r\n            userId = props.id\r\n            if(!userId) navigate('/login')\r\n        }\r\n        if (userId) {\r\n            props.getUserProfile(userId)\r\n            props.getStatus(userId)\r\n        }\r\n    }, [userId, props.profileAuthImg])\r\n\r\n    return (\r\n        <Profile {...props} userId = {userId} /> \r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    id: state.auth.id,\r\n    profileAuthImg: state.profilePage.profileAuthImg,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, updatePhoto, saveProfile}),\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\n// export default connect(mapStateToProps, {getUserProfile})(withRouter(AuthRedirectComponent))\r\n\r\n\r\n","import React from \"react\"\r\nimport {Navigate} from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => { \r\n    return {\r\n      isAuth: state.auth.isAuth,\r\n    }\r\n  }\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    let RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Navigate to={'/login'}/>\r\n        return <Component {...props}/>\r\n    }\r\n    \r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}"],"names":["props","_jsx","className","s","children","onChange","e","updatePhoto","target","files","type","accept","Contact","_ref","title","value","_jsxs","classes","_useState","useState","_useState2","_slicedToArray","isOpened","setIsOpened","onClick","Object","keys","profile","contacts","map","c","status","setStatus","_useState3","_useState4","editMode","setEditMode","useEffect","currentTarget","autoFocus","onBlur","updateStatus","onDoubleClick","userId","setInEdit","_Fragment","fullName","ProfileStatus","aboutMe","lookingForAJobDescription","Socials","_useForm","useForm","mode","defaultValues","facebook","website","vk","twitter","instagram","youtube","github","mainLink","register","handleSubmit","setError","_useForm$formState","formState","errors","isValid","onSubmit","data","saveProfile","then","catch","err","console","log","disabled","_objectSpread","placeholder","required","validate","trim","message","style","_errors$contacts","toUpperCase","slice","concat","inEdit","src","bg","photos","large","noImg","ChangeImg","undefined","ProfileDataForm","ProfileData","likesCount","MyPosts","reset","addPost","newPostText","AddPostForm","postsData","elem","Post","id","memo","connect","state","profilePage","ProfileInfo","profileAuthImg","MyPostsContainer","Preloader","compose","auth","getUserProfile","getStatus","withAuthRedirect","useParams","navigate","useNavigate","Profile","mapStateToPropsForRedirect","isAuth","Component","Navigate","to"],"sourceRoot":""}